head	1.7;
access;
symbols;
locks
	axm3244:1.7; strict;
comment	@ * @;


1.7
date	2013.01.12.03.28.07;	author axm3244;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.12.00.26.49;	author axm3244;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.11.00.51.13;	author axm3244;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.11.00.38.55;	author axm3244;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.07.15.32.52;	author axm3244;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.03.01.19.08;	author axm3244;	state Exp;
branches;
next	1.1;

1.1
date	2012.12.30.02.44.03;	author axm3244;	state Exp;
branches;
next	;


desc
@Basic Frame Outlining
@


1.7
log
@Added Logout
@
text
@//  $Id: SSLFunctions.h,v 1.6 2013/01/12 00:26:49 axm3244 Exp axm3244 $

/*  SUMMARY
 *  Header file to include all the required libraries and
 *  link remoteCMD.cpp which houses main function and
 *  SSHFunctions.cpp which houses SSH functions.
 *

 *
 *
 *  REVISION HISTORY
 *    $Log: SSLFunctions.h,v $
 *    Revision 1.6  2013/01/12 00:26:49  axm3244
 *    Added Reading Email Functionality
 *    Selecting Email functionality
 *
 *    Revision 1.5  2013/01/11 00:51:13  axm3244
 *    Added IMAP command Sending Procedure
 *    Currently For Fetching Mailbox
 *
 *    Revision 1.4  2013/01/11 00:38:55  axm3244
 *    Added Log In Functionality
 *    Authentication
 *
 *    Revision 1.3  2013/01/07 15:32:52  axm3244
 *    Certification
 *    TCP connection Successful
 *
 *    Revision 1.2  2013/01/03 01:19:08  axm3244
 *    Added Few Functionalities
 *    TCP Connection
 *    Socket Creation
 *    Context Creation
 *
 *    Revision 1.1  2012/12/30 02:44:03  axm3244
 *    Initial revision
 *
 *
 *    Author : Ankan Mookherjee
 *
 */


// Referencing library and header files for pre-processing

#ifndef SSHFUNCTIONS_H
#define SSHFUNCTIONS_H

#include "openssl/ssl.h"
#include "openssl/bio.h"
#include "openssl/err.h"

#include "stdio.h"
#include "string.h"


extern BIO *bio_err;


//Declaring Prototype functions to be implemented in SSHFunctions.cpp


/*
 * Initialize Context
 *
 * Initializing Context method by taking
 * by SSL library initializing , reporting of error string
 * and creating a BIO object for SSL Encryption
 *
 * @@praram  takes keyfile and password as argument
 * @@returns pointer to SSL_CTX (ssl context object)
 */
SSL_CTX * initialize_Context();


/*
 * Check TCP connection
 *
 * Checks the connection between client and IMAP server
 *
 * @@praram  takes hostname and port number as argument
 * @@returns void
 */
void check_Connection(BIO * bio,SSL_CTX *ctx);


/*
 * Checks SSL certificate
 *
 * Checks SSL certificate during handshaking
 *
 * @@praram  SSL context pointer, host name
 * @@returns 1 on success 0 on failure
 */
int checkSSLCertificate(SSL * ssl,SSL_CTX *ctx, BIO *bio);

/*
 * Read Write Imap
 *
 * Writes command into IMAP server and reads from response
 *
 * @@praram  BIO **, character pointer
 * @@returns void
 */

void writeReadImap(BIO **bio,const char* msg);

/*
 * Destroy SSL context object
 * and frees the connection after its use
 *
 * @@praram  SSL context pointer, BIO pointer
 * @@returns void
 */

void destroy_ctx(SSL_CTX *ctx, BIO *bio);


#endif
@


1.6
log
@Added Reading Email Functionality
Selecting Email functionality
@
text
@d1 1
a1 1
//  $Id: SSLFunctions.h,v 1.5 2013/01/11 00:51:13 axm3244 Exp axm3244 $
d13 4
d64 1
a64 1
 * Initialize Context 
d68 1
a68 1
 * and creating a BIO object for 
d73 1
a73 3

//SSL_CTX *initialize_ctx(char *keyfile, char *password);

d77 1
a77 1
 * Create a TCP connection
d79 1
a79 1
 * Creates a TCP connection between client and server 
d82 1
a82 1
 * @@returns socket
d84 1
a84 4

//int tcp_connect(char *host,int port);


d88 1
a88 1
 * Checks SSL certificate 
d93 10
d106 1
a106 2
//void check_cert(SSL *ssl,char *host);

a116 2


@


1.5
log
@Added IMAP command Sending Procedure
Currently For Fetching Mailbox
@
text
@d1 1
a1 1
//  $Id: SSLFunctions.h,v 1.4 2013/01/11 00:38:55 axm3244 Exp axm3244 $
d13 4
d102 1
d104 1
a104 3
 * Destroys SSL context object after its use
 *
 * @@praram  SSL context pointer
d108 1
a108 2

//void destroy_ctx(SSL_CTX *ctx);
@


1.4
log
@Added Log In Functionality
Authentication
@
text
@d1 1
a1 1
//  $Id: SSLFunctions.h,v 1.3 2013/01/07 15:32:52 axm3244 Exp axm3244 $
d13 4
a49 4

#endif


@


1.3
log
@Certification
TCP connection Successful
@
text
@d1 1
a1 1
//  $Id: SSLFunctions.h,v 1.2 2013/01/03 01:19:08 axm3244 Exp axm3244 $
d13 4
d37 3
a39 24
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <netdb.h>
#include <fcntl.h>
#include <signal.h>
#include <unistd.h>
#include <string.h>
#include <openssl/ssl.h>



#define CA_LIST "root.pem"
#define HOST	"localhost"
#define RANDOM  "random.pem"
#define PORT	4433
#define BUFSIZZ 1024

#define KEYFILE "client.pem"
#define PASSWORD "password"
d41 2
a46 4
#ifndef ALLOW_OLD_VERSIONS
#if (OPENSSL_VERSION_NUMBER < 0x00905100L)
#error "Must use OpenSSL 0.9.6 or later"
#endif
d66 1
a66 1
SSL_CTX *initialize_ctx(char *keyfile, char *password);
d79 1
a79 1
int tcp_connect(char *host,int port);
d93 1
a93 1
void check_cert(SSL *ssl,char *host);
d106 1
a106 1
void destroy_ctx(SSL_CTX *ctx);
@


1.2
log
@Added Few Functionalities
TCP Connection
Socket Creation
Context Creation
@
text
@d1 1
a1 1
//  $Id: SSLFunctions.h,v 1.1 2012/12/30 02:44:03 axm3244 Exp axm3244 $
d13 6
d54 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
//  $Id$
d12 4
a15 1
 *    $Log$
d27 10
a36 5
#include <libssh/libssh.h>
#include<iostream>
#include <cstdlib>
#include <termios.h>
#include<cstring>
d38 20
a57 1
#include<stdio.h>
d64 1
a64 1
 * Run Session
d66 3
a68 4
 * Opens a session and sets host name and assigns port
 * for communication for user during an ssh session
 * Makes call to keyboard interactive method and show remote files
 * method
d70 2
a71 3
 * @@praram  takes const char * Hostname , const char* Command
 * as argument
 * @@returns void
d74 1
a74 1
void run_session(const char* hostname, const char* command);
d79 1
a79 1
 * Keyboard Interactive Authentication
d81 1
a81 3
 * Using Keyboard interactive method by taking
 * spontaneous direct input from the user to authenticate
 * user during an ssh session
d83 2
a84 2
 * @@praram  takes ssh_session as argument
 * @@returns int
d87 3
a89 1
int authenticate_kbdint(ssh_session session);
d92 11
d105 1
a105 1
 * Interactive Opening of a Shell Session
d107 1
a107 3
 * Using ssh_channel to open a channel in remote shell
 * Use this remote to open an ssh_session
 * Starts a command interpreter on the remote computer
d109 2
a110 2
 * @@praram  takes ssh_channel and command as argument
 * @@returns int
d113 4
a116 1
int show_remote_files(ssh_session session, const char* command);
@
